import{_ as g,c as d,a as t,o as l,n as _,t as c,w as v,v as f,F as b,r as S,d as y,e as w,f as p,g as h,h as A,i as M,b as L}from"./index-Qar9Clzy.js";const P={props:{perspective:{type:String,default:"A"}},emits:["toggle"],mounted(){this.init3D(),window.addEventListener("keydown",this.handleKeyPress)},beforeUnmount(){window.removeEventListener("keydown",this.handleKeyPress)},methods:{init3D(){const o=this.$refs.canvas,e=o.getContext("2d"),r=[{x:100,y:100},{x:200,y:100},{x:200,y:200},{x:100,y:200},{x:150,y:50},{x:250,y:50},{x:250,y:150},{x:150,y:150}],a=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]];this.drawCube=()=>{e.clearRect(0,0,o.width,o.height),e.strokeStyle=this.perspective==="A"?"#3498db":"#e74c3c",e.lineWidth=3,a.forEach(s=>{const[i,n]=s;e.beginPath(),e.moveTo(r[i].x,r[i].y),e.lineTo(r[n].x,r[n].y),e.stroke()})},this.drawCube()},togglePerspective(){this.$emit("toggle")},handleKeyPress(o){o.code==="Space"&&this.togglePerspective()}},watch:{perspective(){this.drawCube()}}},B={ref:"canvas",width:"300",height:"300"};function F(o,e,r,a,s,i){return l(),d("div",{class:"necker-cube",onClick:e[0]||(e[0]=(...n)=>i.togglePerspective&&i.togglePerspective(...n))},[t("canvas",B,null,512)])}const I=g(P,[["render",F],["__scopeId","data-v-56f1c01e"]]),N={props:{state:{type:Object,required:!0}}},T={class:"probability-bars"},D={class:"bar-container"},E={class:"percentage"},U={class:"percentage"};function z(o,e,r,a,s,i){return l(),d("div",T,[t("div",D,[t("div",{class:"bar-a",style:_({height:`${r.state.A*100}%`,background:"linear-gradient(to top, #3498db, #2ecc71)"})},[t("div",E,c((r.state.A*100).toFixed(1))+"%",1)],4),t("div",{class:"bar-b",style:_({height:`${r.state.B*100}%`,background:"linear-gradient(to top, #e74c3c, #f39c12)"})},[t("div",U,c((r.state.B*100).toFixed(1))+"%",1)],4)])])}const V=g(N,[["render",z],["__scopeId","data-v-9d45bd3b"]]),O={props:{precision:{type:Number,required:!0},error:{type:Number,required:!0}},mounted(){this.drawPrecisionGraph()},methods:{drawPrecisionGraph(){this.$refs.precisionCanvas.getContext("2d")}},watch:{precision(){this.drawPrecisionGraph()}}},j={class:"meta-state"},q={class:"precision-graph"},R={ref:"precisionCanvas",width:"200",height:"50"},J={class:"error-display"};function G(o,e,r,a,s,i){return l(),d("div",j,[t("div",q,[t("canvas",R,null,512)]),t("div",J,[t("span",null,"预测误差: "+c(r.error.toFixed(2)),1)])])}const K=g(O,[["render",G]]),W={props:{logs:{type:Array,required:!0}},data(){return{searchText:""}},computed:{filteredLogs(){return this.logs.map(o=>{const e={...o};return o.message.includes("锁定")?e.message="[系统] 我决定坚持当前视角，不再动摇":o.message.includes("解锁")?e.message="[系统] 重新开放感知评估":o.message.includes("切换")?e.message=`[顿悟] 啊！原来是${o.message.split("：")[1]}视角！`:o.message.includes("冻结")&&(e.message=`[控制] ${o.message}`),e}).filter(o=>o.message.toLowerCase().includes(this.searchText.toLowerCase()))}}},H={class:"log-panel"},Q={class:"header"},X={class:"log-content"};function Y(o,e,r,a,s,i){return l(),d("div",H,[t("div",Q,[e[1]||(e[1]=t("h3",null,"感知日志",-1)),v(t("input",{"onUpdate:modelValue":e[0]||(e[0]=n=>s.searchText=n),placeholder:"过滤日志...",class:"search-input"},null,512),[[f,s.searchText]])]),t("div",X,[(l(!0),d(b,null,S(i.filteredLogs,(n,m)=>(l(),d("div",{key:m,class:y(["log-entry",{"log-warning":n.message.includes("警告"),"log-error":n.message.includes("错误")}])}," ["+c(n.time)+"] "+c(n.message),3))),128))])])}const Z=g(W,[["render",Y],["__scopeId","data-v-a734520c"]]),ee={data(){return{animationSpeed:1,simulationSpeed:1e3,themeColor:"blue",priorA:.5}},methods:{saveSettings(){localStorage.setItem("userSettings",JSON.stringify({animationSpeed:this.animationSpeed,simulationSpeed:this.simulationSpeed,themeColor:this.themeColor,priorA:this.priorA})),this.$emit("settings-changed",{priorA:this.priorA})}},mounted(){const o=localStorage.getItem("userSettings");if(o){const e=JSON.parse(o);this.animationSpeed=e.animationSpeed,this.themeColor=e.themeColor}}},te={class:"settings-panel"},se={class:"setting-item"},oe={class:"setting-item"},ne={class:"setting-item"},ie={class:"setting-item"};function re(o,e,r,a,s,i){return l(),d("div",te,[e[10]||(e[10]=t("h3",null,"用户设置",-1)),t("div",se,[e[5]||(e[5]=t("label",null,"动画速度",-1)),v(t("input",{type:"range",min:"0.1",max:"2",step:"0.1","onUpdate:modelValue":e[0]||(e[0]=n=>s.animationSpeed=n)},null,512),[[f,s.animationSpeed]]),t("span",null,c(s.animationSpeed)+"x",1)]),t("div",oe,[e[6]||(e[6]=t("label",null,"模拟速度 (ms)",-1)),v(t("input",{type:"range",min:"100",max:"3000",step:"100","onUpdate:modelValue":e[1]||(e[1]=n=>s.simulationSpeed=n)},null,512),[[f,s.simulationSpeed]]),t("span",null,c(s.simulationSpeed),1)]),t("div",ne,[e[8]||(e[8]=t("label",null,"主题颜色",-1)),v(t("select",{"onUpdate:modelValue":e[2]||(e[2]=n=>s.themeColor=n)},[...e[7]||(e[7]=[t("option",{value:"blue"},"蓝色",-1),t("option",{value:"green"},"绿色",-1),t("option",{value:"red"},"红色",-1)])],512),[[w,s.themeColor]])]),t("div",ie,[e[9]||(e[9]=t("label",null,"先验概率A",-1)),v(t("input",{type:"range",min:"0.1",max:"0.9",step:"0.1","onUpdate:modelValue":e[3]||(e[3]=n=>s.priorA=n)},null,512),[[f,s.priorA]]),t("span",null,c(s.priorA),1)]),t("button",{onClick:e[4]||(e[4]=(...n)=>i.saveSettings&&i.saveSettings(...n))},"保存设置")])}const ae=g(ee,[["render",re],["__scopeId","data-v-05a03a5a"]]),de={props:{monologues:{type:Array,required:!0,default:()=>[]}}},le={class:"inner-monologue"},ce={class:"monologue-content"},ue={class:"timestamp"},ge={class:"content"};function pe(o,e,r,a,s,i){return l(),d("div",le,[e[0]||(e[0]=t("h3",null,"AI内心独白",-1)),t("div",ce,[(l(!0),d(b,null,S(r.monologues,(n,m)=>(l(),d("div",{key:m,class:"monologue-entry"},[t("span",ue,c(n.timestamp),1),t("span",ge,c(n.content),1)]))),128))])])}const he=g(de,[["render",pe],["__scopeId","data-v-9176f097"]]);class me{constructor(){this.monologues=[],this.innerMonologues=[],this.thoughtProcess=[],this.state={A:.5,B:.5},this.precision=.9,this.predictionError=0}logThought(e){const r=new Date().toLocaleTimeString();let a=e,s=e;if(!e){const i=this.state.A>this.state.B?"A":"B",n=Math.max(this.state.A,this.state.B);n>.9?(a=`[稳定期] 我确信我看到的是视角${i}（置信度：${n.toFixed(2)}）。`,s=`[内心独白] 我正专注于视角${i}，感觉非常确定。`):this.predictionError>.2?(a="[临界点] 不确定性过高！重新评估中...",s="[内心独白] 我感到困惑，需要重新思考..."):n<.8?(a=`[累积期] 检测到预测误差轻微上升，我的确定性开始动摇（置信度：${n.toFixed(2)}）。`,s=`[内心独白] 我对视角${i}的确定性在下降...`):(a=`[切换] 啊！现在我清晰地看到了视角${i}！`,s=`[内心独白] 突然，我清晰地看到了视角${i}！`)}return this.monologues.push({timestamp:r,content:a}),this.innerMonologues.push({timestamp:r,content:s}),this.monologues.length>50&&this.monologues.shift(),this.innerMonologues.length>50&&this.innerMonologues.shift(),this.monologues}getMonologues(){return this.innerMonologues}update(){return this.predictionError=Math.random()*.1,this.state.A=Math.random(),this.state.B=1-this.state.A,this.logThought(),this.state}}const ve={name:"CoreFeature",components:{NeckerCube:I,ProbabilityBars:V,MetaState:K,LogPanel:Z,UserSettings:ae,InnerMonologue:he},data(){return{engine:new me,state:{A:.5,B:.5},precision:.9,predictionError:0,isFrozen:!1,logs:[],innerMonologues:[],isLocked:!1,simulationSpeed:1e3,showModal:!1}},methods:{runInference(){this.isFrozen||(this.state=this.engine.update(),this.precision=this.engine.precision,this.predictionError=this.engine.predictionError,this.logs.unshift({time:new Date().toLocaleTimeString(),message:`状态更新: A=${this.state.A.toFixed(2)}, B=${this.state.B.toFixed(2)}`}),this.innerMonologues=[...this.engine.innerMonologues],this.logs.length>10&&this.logs.pop()),setTimeout(this.runInference,this.simulationSpeed)},toggleFreeze(){this.isFrozen=!this.isFrozen,this.logs.unshift({time:new Date().toLocaleTimeString(),message:`感知已${this.isFrozen?"冻结":"恢复"}`})},toggleLock(){this.isLocked=!this.isLocked},exportData(){const o={state:this.state,logs:this.logs,timestamp:new Date().toISOString()},e=new Blob([JSON.stringify(o,null,2)],{type:"application/json"}),r=URL.createObjectURL(e),a=document.createElement("a");a.href=r,a.download=`perception-data_${new Date().toLocaleDateString()}.json`,a.click(),URL.revokeObjectURL(r)},applySettings(o){o=o||JSON.parse(localStorage.getItem("userSettings")||"{}"),o.animationSpeed&&(this.$refs.neckerCube.animationSpeed=o.animationSpeed),o.priorA&&(this.engine.state.A=o.priorA,this.engine.state.B=1-o.priorA)},handleToggle(){}},computed:{currentPerspective(){return this.state.A>this.state.B?"A":"B"}},mounted(){this.runInference()}},fe={class:"core-feature"},_e={class:"left-panel"},be={class:"center-panel"},Se={class:"right-panel"},ye={class:"controls"},xe={class:"modal-content"},Ce={class:"modal-header"};function $e(o,e,r,a,s,i){const n=h("NeckerCube"),m=h("ProbabilityBars"),x=h("MetaState"),C=h("LogPanel"),$=h("InnerMonologue"),k=h("UserSettings");return l(),d("div",fe,[t("div",_e,[p(n,{perspective:i.currentPerspective,onToggle:i.handleToggle,ref:"neckerCube"},null,8,["perspective","onToggle"]),p(m,{state:s.state},null,8,["state"]),p(x,{precision:s.precision,error:s.predictionError},null,8,["precision","error"])]),t("div",be,[p(C,{logs:s.logs},null,8,["logs"]),p($,{monologues:s.innerMonologues},null,8,["monologues"])]),t("div",Se,[p(k,{onSettingsChanged:i.applySettings},null,8,["onSettingsChanged"]),t("div",ye,[t("button",{onClick:e[0]||(e[0]=(...u)=>i.toggleFreeze&&i.toggleFreeze(...u))},"冻结感知"),t("button",{onClick:e[1]||(e[1]=(...u)=>i.exportData&&i.exportData(...u))},"导出数据"),t("button",{onClick:e[2]||(e[2]=(...u)=>i.toggleLock&&i.toggleLock(...u)),class:y({active:s.isLocked})},c(s.isLocked?"解锁感知":"锁定当前视角"),3),t("button",{onClick:e[3]||(e[3]=u=>s.showModal=!0)},"实验功能说明")]),s.showModal?(l(),d("div",{key:0,class:"modal",onClick:e[5]||(e[5]=M(u=>s.showModal=!1,["self"]))},[t("div",xe,[t("div",Ce,[e[6]||(e[6]=t("h2",null,"实验功能说明",-1)),t("span",{class:"close",onClick:e[4]||(e[4]=u=>s.showModal=!1)},"×")]),e[7]||(e[7]=L('<div class="modal-body" data-v-4c61f4dd><h3 data-v-4c61f4dd>实验场景</h3><p data-v-4c61f4dd>本实验模拟人类感知切换的过程，通过 Necker Cube 的视角切换，研究大脑如何处理模糊视觉信息。</p><h3 data-v-4c61f4dd>实验原理</h3><p data-v-4c61f4dd>1. <strong data-v-4c61f4dd>感知切换</strong>：大脑对模糊图像（如 Necker Cube）会自发切换感知视角。<br data-v-4c61f4dd> 2. <strong data-v-4c61f4dd>概率推断</strong>：系统实时计算两种感知状态的概率，反映大脑的推断过程。</p><h3 data-v-4c61f4dd>功能说明</h3><p data-v-4c61f4dd>1. <strong data-v-4c61f4dd>Necker Cube</strong>：显示可切换视角的立方体。<br data-v-4c61f4dd> 2. <strong data-v-4c61f4dd>概率条</strong>：实时显示两种感知状态的概率。<br data-v-4c61f4dd> 3. <strong data-v-4c61f4dd>元状态</strong>：展示推断精度和预测误差。<br data-v-4c61f4dd> 4. <strong data-v-4c61f4dd>日志面板</strong>：记录状态变化和操作历史。<br data-v-4c61f4dd> 5. <strong data-v-4c61f4dd>内心独白</strong>：模拟系统的推理过程。</p><h3 data-v-4c61f4dd>使用说明</h3><p data-v-4c61f4dd>1. 点击<strong data-v-4c61f4dd>“冻结感知”</strong>暂停/恢复状态更新。<br data-v-4c61f4dd> 2. 点击<strong data-v-4c61f4dd>“锁定当前视角”</strong>固定 Necker Cube 的显示模式。<br data-v-4c61f4dd> 3. 点击<strong data-v-4c61f4dd>“导出数据”</strong>保存实验日志。<br data-v-4c61f4dd> 4. 在<strong data-v-4c61f4dd>用户设置</strong>中调整动画速度和初始概率。</p></div>',1))])])):A("",!0)])])}const we=g(ve,[["render",$e],["__scopeId","data-v-4c61f4dd"]]);export{we as default};
